server.port = 5000

#
spring.kafka.streams.application-id=test

# Spring cloud kafka defaults
#spring.cloud.stream.kafka.streams.binder.brokers=10.168.244.227:31090
#spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.mms=1000
#spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=com.wartsila.assetmanagement.anomalytimelinemiddleware.errorscore.raw.boundary.ErrorScoreSerde
#spring.cloud.stream.kafka.binder.auto-create-topics=false
# use the following timestamp extractor to deal with late arriving events
#spring.cloud.stream.kafka.streams.binder.configuration.default.timestamp.extractor=com.wartsila.assetmanagement.anomalytimelinemiddleware.errorscore.raw.boundary.ErrorScoreTimestampExtractor
# cofigure the retention period of the local stores to 1 month of data (2628000000ms)
#spring.cloud.stream.kafka.streams.binder.configuration.windowstore.changelog.additional.retention.ms=2628000000
#
# error-score-in binding
#spring.cloud.stream.bindings.error-score-in.destination=error-score
#spring.cloud.stream.bindings.error-score-in.consumer.header-mode=raw
#spring.cloud.stream.bindings.error-score-in.group=anomaly-timeline

#logging.level.org=DEBUG
